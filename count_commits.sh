#!/bin/bash

# Count how many commits would be generated by all scripts
# This script analyzes the git history scripts without executing them

echo "Counting commits in all git history scripts..."

# Function to count commits in a file
count_commits() {
  local file=$1
  local count=$(grep -c 'commit_with_date' $file)
  local merge_count=$(grep -c 'merge_branch' $file)
  
  # Each merge creates an additional commit
  local total=$((count + merge_count))
  echo "$file: $total commits"
  echo "$total"
}

# Count commits in each script
part1_count=$(count_commits reset_git_history.sh)
part2_count=$(count_commits reset_git_history_part2.sh)
part3_count=$(count_commits reset_git_history_part3.sh)
part4_count=$(count_commits reset_git_history_part4.sh)
part5_count=$(count_commits reset_git_history_part5.sh)

# Extract just the numbers
part1_num=$(echo "$part1_count" | tail -n1)
part2_num=$(echo "$part2_count" | tail -n1)
part3_num=$(echo "$part3_count" | tail -n1)
part4_num=$(echo "$part4_count" | tail -n1)
part5_num=$(echo "$part5_count" | tail -n1)

# Calculate total commits
total_commits=$((part1_num + part2_num + part3_num + part4_num + part5_num))

echo "========================================"
echo "Total commits across all scripts: $total_commits"
echo "========================================"

# Check if we've reached the target
if [ $total_commits -ge 1500 ]; then
  echo "✅ Target of 1500+ commits achieved!"
else
  echo "❌ Target not achieved. Need $(( 1500 - total_commits )) more commits."
fi 