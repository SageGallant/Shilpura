#!/usr/bin/env python
# Count how many commits would be generated by all scripts

import re
import os

def count_commits_in_file(filename):
    """Count commits and merges in a bash script file"""
    try:
        with open(filename, 'r') as file:
            content = file.read()
            # Count commit_with_date calls
            commit_count = len(re.findall(r'commit_with_date', content))
            # Count merge_branch calls
            merge_count = len(re.findall(r'merge_branch', content))
            
            total = commit_count + merge_count
            print(f"{filename}: {total} commits")
            return total
    except FileNotFoundError:
        print(f"File {filename} not found")
        return 0

# Files to check
files = [
    "reset_git_history.sh",
    "reset_git_history_part2.sh",
    "reset_git_history_part3.sh", 
    "reset_git_history_part4.sh",
    "reset_git_history_part5.sh"
]

# Count commits in each file
total_commits = 0
for file in files:
    if os.path.exists(file):
        total_commits += count_commits_in_file(file)

print("\n" + "="*40)
print(f"Total commits across all scripts: {total_commits}")
print("="*40)

# Check if we've reached the target
if total_commits >= 1500:
    print("✅ Target of 1500+ commits achieved!")
else:
    print(f"❌ Target not achieved. Need {1500 - total_commits} more commits.") 